swagger: '2.0'
info:
  title: Forsta Atlas API
  description: User and Tag management API for Forsta Messaging Platform
  termsOfService: https://forsta.io/terms
  contact:
    email: support@forsta.io
  version: v1
host: atlas.forsta.io
schemes:
  - https
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  JSON Web Token:
    description: See the /v1/login/send resource.
    in: header
    name: Authorization
    type: apiKey
security:
  - JSON Web Token: []
paths:
  /api-token-refresh/:
    post:
      operationId: api-token-refresh_create
      description: "API View that returns a refreshed token (with new expiration)\
        \ based on\nexisting token\n\nIf 'orig_iat' field (original issued-at-time)\
        \ is found, will first check\nif it's within expiration window, then copy\
        \ it to the new token"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Refresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Refresh'
      tags:
        - api-token-refresh
    parameters: []
  /billing/card/:
    put:
      operationId: billing_card_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - billing
    parameters: []
  /billing/plan/:
    get:
      operationId: billing_plan_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - billing
    parameters: []
  /billing/status/:
    get:
      operationId: billing_status_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - billing
    parameters: []
  /billing/subscription/:
    post:
      operationId: billing_subscription_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - billing
    put:
      operationId: billing_subscription_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - billing
    delete:
      operationId: billing_subscription_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - billing
    parameters: []
  /billing/webhook/:
    post:
      operationId: billing_webhook_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - billing
    parameters: []
  /conversation/:
    post:
      operationId: conversation_create
      description: "Creates a conversation to be used per the above ConversationUseView.\n\
        \nBody parameters:\n* captcha [reCaptcha's output] -- required if not currently\
        \ signed in\n* thread_id -- optional thread id (defaults to a random uuid4)\n\
        * distribution -- optional starting distribution (defaults to empty, or self\
        \ if signed in)\n* expires -- optional expiration datetime (defaults to 1\
        \ day from now)"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConversationCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/ConversationCreate'
      tags:
        - conversation
    parameters: []
  /conversation/{conversation_token}/:
    get:
      operationId: conversation_read
      description: Returns information about a conversation (if the requestor is the
        creator).
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - conversation
    post:
      operationId: conversation_create
      description: "Facilitates placing a user into a Conversation specified by its\
        \ token.\n\nBody parameters:\n* first_name, last_name -- optional name used\
        \ if an ephemeral user is created,\n                           defaults to\
        \ \"Anonymous User\"\n* email, phone -- optional information to be used if\
        \ an ephemeral user is created\n\nIf the caller isn't a signed-in user, an\
        \ ephemeral user is created in the creator's org\n(or the public org if the\
        \ conversation was created anonymously) using the optional\nuser information\
        \ (the user's tag is generated from slugifying+uniquifying their full name)."
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - conversation
    parameters:
      - name: conversation_token
        in: path
        required: true
        type: string
  /directory/domain/:
    get:
      operationId: directory_domain_list
      description: A read-only, as light weight as possible, global user directory.
      parameters:
        - name: id
          in: query
          description: ''
          required: false
          type: string
        - name: id_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: slug
          in: query
          description: ''
          required: false
          type: string
        - name: slug_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/DomainDirectory'
      tags:
        - directory
    parameters: []
  /directory/user/:
    get:
      operationId: directory_user_list
      description: "A read-only, as light weight as possible, global user directory.\n\
        We expose non Org users only if they are _not_ staff or superuser, this is\
        \ necessary\nfor clients to figure out which users are in orgs and which are\
        \ not. Because the clients\nwill interact with non-org users that are used\
        \ for integration purposes."
      parameters:
        - name: id
          in: query
          description: ''
          required: false
          type: string
        - name: id_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: slug
          in: query
          description: ''
          required: false
          type: string
        - name: slug_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: phone
          in: query
          description: ''
          required: false
          type: string
        - name: phone_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: email
          in: query
          description: ''
          required: false
          type: string
        - name: email_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: user_type
          in: query
          description: ''
          required: false
          type: string
        - name: is_monitor
          in: query
          description: ''
          required: false
          type: string
        - name: created
          in: query
          description: ''
          required: false
          type: string
        - name: created__gt
          in: query
          description: ''
          required: false
          type: string
        - name: created__gte
          in: query
          description: ''
          required: false
          type: string
        - name: created__lt
          in: query
          description: ''
          required: false
          type: string
        - name: created__lte
          in: query
          description: ''
          required: false
          type: string
        - name: modified
          in: query
          description: ''
          required: false
          type: string
        - name: modified__gt
          in: query
          description: ''
          required: false
          type: string
        - name: modified__gte
          in: query
          description: ''
          required: false
          type: string
        - name: modified__lt
          in: query
          description: ''
          required: false
          type: string
        - name: modified__lte
          in: query
          description: ''
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/UserDirectory'
      tags:
        - directory
    parameters: []
  /ephemeral-token:
    post:
      operationId: ephemeral-token_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - ephemeral-token
    delete:
      operationId: ephemeral-token_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - ephemeral-token
    parameters: []
  /ephemeral-user/:
    post:
      operationId: ephemeral-user_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/EphemeralUser'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/EphemeralUser'
      tags:
        - ephemeral-user
    parameters: []
  /invitation/:
    post:
      operationId: invitation_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - invitation
    parameters: []
  /invitation/{iid}/:
    delete:
      operationId: invitation_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - invitation
    parameters:
      - name: iid
        in: path
        required: true
        type: string
  /join/{invitation_token}/:
    get:
      operationId: join_read
      description: "Retrieves the latest info associated with an invitation\n\nFields\
        \ returned:\n* phone, email, first_name, last_name"
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - join
    post:
      operationId: join_create
      description: "Creates an account (and an org for it, optionally).\n\nBody parameters:\n\
        * captcha [reCaptcha's output]\n* phone, email, fullname, tag_slug, password\
        \ [all required except phone]\n* org_name, org_slug [include if also creating\
        \ an org]\n\nFields returned on success:\n* nametag, orgslug, jwt"
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - join
    parameters:
      - name: invitation_token
        in: path
        required: true
        type: string
  /login/:
    post:
      operationId: login_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserAuthentication'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserAuthentication'
      tags:
        - login
    parameters: []
  /login/authtoken/:
    post:
      operationId: login_authtoken_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserAuthentication'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserAuthentication'
      tags:
        - login
    parameters: []
  /login/send/{org}/{tag_slug}/:
    get:
      operationId: login_send_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserLoginSend'
      tags:
        - login
    parameters:
      - name: org
        in: path
        required: true
        type: string
      - name: tag_slug
        in: path
        required: true
        type: string
  /org/:
    get:
      operationId: org_list
      description: API endpoint for Org data
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Org'
      tags:
        - org
    post:
      operationId: org_create
      description: API endpoint for Org data
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Org'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Org'
      tags:
        - org
    parameters: []
  /org/{id}/:
    get:
      operationId: org_read
      description: API endpoint for Org data
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Org'
      tags:
        - org
    put:
      operationId: org_update
      description: API endpoint for Org data
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Org'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Org'
      tags:
        - org
    patch:
      operationId: org_partial_update
      description: API endpoint for Org data
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Org'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Org'
      tags:
        - org
    delete:
      operationId: org_delete
      description: API endpoint for Org data
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - org
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /org/{id}/bulk/:
    post:
      operationId: org_bulk
      description: API endpoint for Org data
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrgBulk'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OrgBulk'
      tags:
        - org
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /org/{id}/controller/:
    post:
      operationId: org_controller_create
      description: "The request data should have these, or an acceptable variation\
        \ of, account values\n'tenant_name', Tenant/Customer name on the directory/controller\n\
        'app_key', secret key used to establish connections to controller\n'type',\
        \ controller type, ie: Azure, Cobot, etc.\n'client_id', app/client identifier\
        \ for directory/controller service"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrgController'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/OrgController'
      tags:
        - org
    put:
      operationId: org_controller_update
      description: "The request data should have these, or an acceptable variation\
        \ of, account values\n'tenant_name', Tenant/Customer name on the directory/controller\n\
        'app_key', secret key used to establish connections to controller\n'type',\
        \ controller type, ie: Azure, Cobot, etc.\n'client_id', app/client identifier\
        \ for directory/controller service"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrgController'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/OrgController'
      tags:
        - org
    delete:
      operationId: org_controller_delete
      description: "The request data should have these, or an acceptable variation\
        \ of, account values\n'tenant_name', Tenant/Customer name on the directory/controller\n\
        'app_key', secret key used to establish connections to controller\n'type',\
        \ controller type, ie: Azure, Cobot, etc.\n'client_id', app/client identifier\
        \ for directory/controller service"
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - org
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /org/{id}/preferences/:
    get:
      operationId: org_preferences_read
      description: API endpoint for Org data
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Org'
      tags:
        - org
    put:
      operationId: org_preferences_update
      description: API endpoint for Org data
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Org'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Org'
      tags:
        - org
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /password/reset/:
    post:
      operationId: password_reset_create
      description: "Sends email or SMS to a user with a one time token for password\n\
        resetting."
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordReset'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/PasswordReset'
      tags:
        - password
    parameters: []
  /password/reset/{user_id}/:
    put:
      operationId: password_reset_update
      description: Confirm the password reset via token.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/PasswordResetConfirm'
      tags:
        - password
    parameters:
      - name: user_id
        in: path
        required: true
        type: string
  /provision-proxy/:
    get:
      operationId: provision-proxy_list
      description: "Return a device list for this account or 404 if they are not\n\
        registered with TSS."
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - provision-proxy
    put:
      operationId: provision-proxy_update
      description: Provision/refresh a new TSS account.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - provision-proxy
    parameters: []
  /provision/account:
    get:
      operationId: provision_account_list
      description: "Return a device list for this account or 404 if they are not\n\
        registered with TSS."
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - provision
    put:
      operationId: provision_account_update
      description: Provision/refresh a new TSS account.
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - provision
    parameters: []
  /provision/request:
    post:
      operationId: provision_request_create
      description: Provision/refresh a new TSS account.
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - provision
    parameters: []
  /recover/email/{email}/:
    get:
      operationId: recover_email_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - recover
    parameters:
      - name: email
        in: path
        required: true
        type: string
  /recover/phone/{phone}/:
    get:
      operationId: recover_phone_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - recover
    parameters:
      - name: phone
        in: path
        required: true
        type: string
  /rtc/servers:
    get:
      operationId: rtc_servers_list
      description: "Request a new set of STUN and TURN servers for WebRTC ICE.  These\n\
        can be fed directely to the RTCPeerConnection class in JavaScript."
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - rtc
    parameters: []
  /tag-pick/:
    get:
      operationId: tag-pick_list
      description: ''
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/PickedTag'
      tags:
        - tag-pick
    parameters: []
  /tag/:
    get:
      operationId: tag_list
      description: ''
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/Tag'
      tags:
        - tag
    post:
      operationId: tag_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tag
    parameters: []
  /tag/{id}/:
    get:
      operationId: tag_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tag
    put:
      operationId: tag_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tag
    patch:
      operationId: tag_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Tag'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Tag'
      tags:
        - tag
    delete:
      operationId: tag_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - tag
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this tag.
        required: true
        type: string
        format: uuid
  /tagmath/:
    post:
      operationId: tagmath_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - tagmath
    parameters: []
  /user/:
    get:
      operationId: user_list
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: id
          in: query
          description: ''
          required: false
          type: string
        - name: email
          in: query
          description: ''
          required: false
          type: string
        - name: tags
          in: query
          description: ''
          required: false
          type: string
        - name: org__id
          in: query
          description: ''
          required: false
          type: string
        - name: user_type
          in: query
          description: ''
          required: false
          type: string
        - name: is_monitor
          in: query
          description: ''
          required: false
          type: string
        - name: created
          in: query
          description: ''
          required: false
          type: string
        - name: created__gt
          in: query
          description: ''
          required: false
          type: string
        - name: created__gte
          in: query
          description: ''
          required: false
          type: string
        - name: created__lt
          in: query
          description: ''
          required: false
          type: string
        - name: created__lte
          in: query
          description: ''
          required: false
          type: string
        - name: modified
          in: query
          description: ''
          required: false
          type: string
        - name: modified__gt
          in: query
          description: ''
          required: false
          type: string
        - name: modified__gte
          in: query
          description: ''
          required: false
          type: string
        - name: modified__lt
          in: query
          description: ''
          required: false
          type: string
        - name: modified__lte
          in: query
          description: ''
          required: false
          type: string
        - name: id_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: phone_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: email_in
          in: query
          description: Multiple values may be separated by commas.
          required: false
          type: string
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - user
    post:
      operationId: user_create
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - user
    parameters: []
  /user/{id}/:
    get:
      operationId: user_read
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - user
    put:
      operationId: user_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - user
    patch:
      operationId: user_partial_update
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - user
    delete:
      operationId: user_delete
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - user
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this User.
        required: true
        type: string
        format: uuid
  /user/{id}/invite/:
    post:
      operationId: user_invite
      description: API endpoint that allows users to be viewed or edited.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - user
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this User.
        required: true
        type: string
        format: uuid
  /userauthtoken/:
    get:
      operationId: userauthtoken_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - userauthtoken
    post:
      operationId: userauthtoken_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - userauthtoken
    parameters: []
  /userauthtoken/{id}/:
    delete:
      operationId: userauthtoken_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - userauthtoken
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /usertag/:
    get:
      operationId: usertag_list
      description: ''
      parameters:
        - name: ordering
          in: query
          description: Which field to use when ordering the results.
          required: false
          type: string
        - name: search
          in: query
          description: A search term.
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
              previous:
                type: string
                format: uri
              results:
                type: array
                items:
                  $ref: '#/definitions/UserTag'
      tags:
        - usertag
    post:
      operationId: usertag_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserTag'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserTag'
      tags:
        - usertag
    parameters: []
  /usertag/{id}/:
    get:
      operationId: usertag_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserTag'
      tags:
        - usertag
    delete:
      operationId: usertag_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - usertag
    parameters:
      - name: id
        in: path
        description: A UUID string identifying this user tag.
        required: true
        type: string
        format: uuid
definitions:
  Refresh:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  ConversationCreate:
    type: object
    properties:
      captcha:
        title: Captcha
        description: ReCaptcha output
        type: string
        minLength: 1
      thread_id:
        title: Thread id
        type: string
        default: 4840e228-7ecb-4e11-b8fc-b8109df925ea
      distribution:
        title: Distribution
        type: string
      expires:
        title: Expires
        type: string
        format: date-time
        default: '2019-10-09T18:41:25.020541Z'
  DomainDirectory:
    required:
      - slug
      - name
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      slug:
        title: Slug
        type: string
        pattern: ^(([\da-z_](\.[\da-z_]|[\da-z_])*)|\.)$
        minLength: 1
      name:
        title: Name
        description: Organization name
        type: string
        maxLength: 255
        minLength: 1
      description:
        title: Description
        description: Organization name
        type: string
        maxLength: 2048
      slogan:
        title: Slogan
        description: Organization slogan
        type: string
        maxLength: 255
  UserDirectory:
    required:
      - tag
      - org
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      tag:
        title: Tag
        type: string
      gravatar_hash:
        title: Gravatar hash
        type: string
        readOnly: true
      user_type:
        title: Type of user
        type: string
        enum:
          - PERSON
          - BOT
          - EPHEMERAL
        readOnly: true
      is_monitor:
        title: Is monitor
        type: boolean
        readOnly: true
      first_name:
        title: First name
        type: string
        readOnly: true
        minLength: 1
      last_name:
        title: Last name
        type: string
        readOnly: true
        minLength: 1
      is_active:
        title: Active
        description: Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
        readOnly: true
      org:
        title: Org
        type: string
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      modified:
        title: Modified
        type: string
        format: date-time
        readOnly: true
      avatar_url:
        title: Avatar url
        description: Avatar URL
        type: string
        format: uri
        readOnly: true
        minLength: 1
  EphemeralUser:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        description: Organizational ephemeral_user_token
        type: string
        minLength: 1
      phone:
        title: Phone
        type: string
      email:
        title: Email
        type: string
        format: email
        default: ''
      first_name:
        title: First name
        type: string
        default: Ephemeral
      last_name:
        title: Last name
        type: string
        default: User
      expire:
        title: Expire
        type: string
        format: date-time
        default: '2019-10-09T18:41:25.035244Z'
  UserAuthentication:
    type: object
    properties:
      authtoken:
        title: Authtoken
        description: 'For code-based auth. Format: orgslug:userslug:sentcode'
        type: string
        maxLength: 200
        minLength: 1
      userauthtoken:
        title: Userauthtoken
        description: For token-based auth.
        type: string
        maxLength: 200
        minLength: 1
      jwtproxy:
        title: Jwtproxy
        description: JWT token from trusted foreign source
        type: string
        minLength: 1
      fq_tag:
        title: Fq tag
        description: 'For password-based auth. Format: @userslug:orgslug'
        type: string
        maxLength: 200
        minLength: 1
      password:
        title: Password
        description: For password-based auth.
        type: string
        maxLength: 200
        minLength: 1
      otp:
        title: Otp
        description: For multifactor auth.
        type: string
        maxLength: 10
        minLength: 1
  UserLoginSend:
    required:
      - msg
    type: object
    properties:
      msg:
        title: Msg
        type: string
        maxLength: 128
        minLength: 1
  Org:
    required:
      - name
      - slug
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      logo:
        title: Logo
        description: Org Logo URL
        type: string
        format: uri
        maxLength: 255
      name:
        title: Name
        description: Organization name
        type: string
        maxLength: 255
        minLength: 1
      preferences:
        title: Preferences
        type: string
        readOnly: true
      address:
        title: Address
        type: string
      billing:
        title: Billing
        type: string
      slug:
        title: Slug
        type: string
        pattern: ^(([\da-z_](\.[\da-z_]|[\da-z_])*)|\.)$
        minLength: 1
      slogan:
        title: Slogan
        description: Organization slogan
        type: string
        maxLength: 255
      website:
        title: Website
        description: Org website
        type: string
        format: uri
        maxLength: 512
      email:
        title: Email
        description: your_company@domain.com
        type: string
        format: email
        maxLength: 254
      account_control:
        title: Account control
        type: string
        readOnly: true
      sending_allowed:
        title: Sending allowed
        type: boolean
        readOnly: true
      ephemeral_user_token:
        title: Ephemeral user token
        description: Token for creating ephemeral users (/@embed client)
        type: string
        readOnly: true
        minLength: 1
      banner:
        title: Banner
        description: URL of banner image for toolbar header
        type: string
        format: uri
        maxLength: 256
      custom_css:
        title: Custom css
        description: Org-level css style for messenger
        type: string
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
  OrgBulk:
    required:
      - first_name
      - phone
      - org
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      first_name:
        title: First name
        type: string
        maxLength: 64
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 64
      last_name:
        title: Last name
        type: string
        maxLength: 64
      external_id:
        title: External ID
        description: 'External ID provided by external directory, ie: Google, Azure,
          etc.'
        type: string
        maxLength: 256
      phone:
        title: Phone
        type: string
        minLength: 1
      is_active:
        title: Active
        description: Designates whether this user should be treated as active. Unselect
          this instead of deleting accounts.
        type: boolean
      org:
        title: Org
        type: string
        format: uuid
      last_login:
        title: Last login
        type: string
        format: date-time
      address:
        title: Address
        type: string
      id:
        title: Id
        type: string
        format: uuid
  OrgController:
    required:
      - account_control
    type: object
    properties:
      account_control:
        title: Account control
        type: object
        additionalProperties:
          type: string
  PasswordReset:
    required:
      - fq_tag
    type: object
    properties:
      fq_tag:
        title: Fq tag
        description: Fully-qualified tag of user to request password reset for, e.g.
          @my.user:company
        type: string
        pattern: '@([\da-z_](?:\.[\da-z_]|[\da-z_])*)(?::([\da-z_](?:\.[\da-z_]|[\da-z_])*))'
        minLength: 1
      method:
        title: Method
        description: Default will look for email first.
        type: string
        enum:
          - email
          - sms
  PasswordResetConfirm:
    required:
      - token
      - password
    type: object
    properties:
      token:
        title: Token
        description: One time token provided by email/sms
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      totp_proof:
        title: Totp proof
        type: string
        default: ''
        minLength: 1
  LightUser:
    title: Created by
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
    readOnly: true
  PickedTag:
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      slug:
        title: Slug
        description: Tag slug (auto slugified)
        type: string
        format: slug
        pattern: ^[-a-zA-Z0-9_]+$
        readOnly: true
        minLength: 1
      description:
        title: Description
        description: Long description
        type: string
        readOnly: true
        minLength: 1
      parents:
        type: array
        items:
          title: Parents
          type: string
          maxLength: 50
          minLength: 1
        readOnly: true
      children:
        type: array
        items:
          title: Children
          type: string
          maxLength: 50
          minLength: 1
        readOnly: true
      user:
        title: User
        type: string
        format: uri
        readOnly: true
      created_by:
        $ref: '#/definitions/LightUser'
      tag_type:
        title: Tag type
        type: integer
        enum:
          - 1
          - 0
        readOnly: true
  AssociatedUsers:
    required:
      - user
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      association_type:
        title: Type of association
        type: string
        enum:
          - MEMBEROF
          - LEADEROF
          - REPORTSTO
      user:
        $ref: '#/definitions/LightUser'
  Tag:
    required:
      - org
      - slug
      - description
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      users:
        type: array
        items:
          $ref: '#/definitions/AssociatedUsers'
        readOnly: true
      user:
        $ref: '#/definitions/LightUser'
      org:
        title: Org
        type: string
      slug:
        title: Slug
        type: string
        pattern: ^(([\da-z_](\.[\da-z_]|[\da-z_])*)|\.)$
        minLength: 1
      description:
        title: Description
        description: Long description
        type: string
        maxLength: 1024
        minLength: 1
      parents:
        type: array
        items:
          title: Parents
          type: string
          maxLength: 50
          minLength: 1
      children:
        type: array
        items:
          title: Children
          type: string
          maxLength: 50
          minLength: 1
        readOnly: true
      created_by:
        $ref: '#/definitions/LightUser'
      tag_type:
        title: Tag type
        type: integer
        enum:
          - 1
          - 0
  LightTag:
    title: Tag
    required:
      - slug
      - description
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      slug:
        title: Slug
        type: string
        pattern: ^(([\da-z_](\.[\da-z_]|[\da-z_])*)|\.)$
        minLength: 1
      description:
        title: Description
        description: Long description
        type: string
        maxLength: 1024
        minLength: 1
  AssociatedTags:
    required:
      - tag
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      association_type:
        title: Type of association
        type: string
        enum:
          - MEMBEROF
          - LEADEROF
          - REPORTSTO
      tag:
        $ref: '#/definitions/LightTag'
  User:
    required:
      - first_name
      - org
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      user_type:
        title: Type of user
        type: string
        enum:
          - PERSON
          - BOT
          - EPHEMERAL
      is_monitor:
        title: Is monitor
        type: boolean
      first_name:
        title: First name
        type: string
        maxLength: 64
        minLength: 1
      middle_name:
        title: Middle name
        type: string
        maxLength: 64
      last_name:
        title: Last name
        type: string
        maxLength: 64
      phone:
        title: Phone
        type: string
      org:
        title: Org
        type: string
      tag:
        title: Tag
        type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/AssociatedTags'
        readOnly: true
      address:
        title: Address
        type: string
      created:
        title: Created
        type: string
        format: date-time
        readOnly: true
      modified:
        title: Modified
        type: string
        format: date-time
        readOnly: true
      permissions:
        title: Permissions
        type: string
        readOnly: true
      gravatar_hash:
        title: Gravatar hash
        type: string
        readOnly: true
      expire:
        title: Expire
        type: string
        format: date-time
        readOnly: true
      tag_slug:
        title: Tag slug
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
      has_password:
        title: Has password
        type: boolean
        readOnly: true
      has_totp:
        title: Has totp
        type: boolean
        readOnly: true
      totp_reset:
        title: Totp reset
        type: boolean
      totp_proof:
        title: Totp proof
        type: string
        minLength: 1
      new_totp_secret:
        title: New totp secret
        type: string
      password_proof:
        title: Password proof
        type: string
        minLength: 1
      website:
        title: Website
        type: string
      avatar_url:
        title: Avatar url
        type: string
      is_active:
        title: Is active
        type: boolean
        default: true
  UserTag:
    required:
      - user
      - tag
    type: object
    properties:
      id:
        title: Id
        type: string
        format: uuid
        readOnly: true
      url:
        title: Url
        type: string
        format: uri
        readOnly: true
      user:
        title: User
        type: string
        format: uri
      user_id:
        title: User id
        type: string
        readOnly: true
      association_type:
        title: Type of association
        type: string
        enum:
          - MEMBEROF
          - LEADEROF
          - REPORTSTO
        default: MEMBEROF
      tag:
        title: Tag
        type: string
        format: uri
      tag_id:
        title: Tag id
        type: string
        readOnly: true
